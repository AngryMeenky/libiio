#!/bin/bash
# Verify that the XML generated locally and remotely is the same (minus the
# few expected differences), and that the XML generated by a context created
# from a XML file matches the context of the XML file.

HOSTNAME=analog.local

DATA1=$(ssh root@$HOSTNAME /bin/sh -c "iio_genxml 2>&1")
DATA2=$(/bin/sh -c "iio_genxml -u ip:$HOSTNAME 2>&1")

# Verify that the IIO context was successfully re-created from the XML string
DATA1_CHECK=$(echo "$DATA1" |grep 'Unable to re-generate context')
DATA2_CHECK=$(echo "$DATA2" |grep 'Unable to re-generate context')
if [ "$DATA1_CHECK" -o "$DATA2_CHECK" ] ; then
	echo "Failed to re-generate context from XML string"
	exit 1
fi

echo "$DATA1" |sed -n 3p > /tmp/.libiio_test.xml

# Keep only the XML line and remove the context-specific attributes that may be different
DATA1=$(echo "$DATA1" |sed -n 3p | sed 's/context name="[^"]*"/context/;s/version-git="[^"]*"//')
DATA2=$(echo "$DATA2" |sed -n 3p | sed 's/context name="[^"]*"/context/;s/version-git="[^"]*"//')

if [ "$DATA1" != "$DATA2" ] ; then
	echo "The strings are not equal!"
	exit 1
fi

DATA3=$(/bin/sh -c "$IIO_GENXML_LOCAL -u xml:/tmp/.libiio_test.xml 2>&1")
DATA3=$(echo "$DATA3" |sed -n 3p | sed 's/context name="[^"]*"/context/;s/version-git="[^"]*"//')

if [ "$DATA1" != "$DATA3" ] ; then
	echo "XML string re-generated locally is not equal!"
	exit 1
fi

echo "XML test passed"

exit 0
